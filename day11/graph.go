package main

import (
	"fmt"
	"math"

	"github.com/fogleman/ln/ln"
)

func render(frame int) {
	cx := math.Cos(ln.Radians(float64(frame)))
	cy := math.Sin(ln.Radians(float64(frame)))
	scene := ln.Scene{}
	eye := ln.Vector{cx, cy, 0}.MulScalar(8)
	center := ln.Vector{0, 0, 0}
	up := ln.Vector{0, 0, 1}

	nodes := []ln.Vector{
		{0.000000, -0.010000, 0.010000}, {0.050000, 0.030000, -0.080000}, {0.130000, -0.120000, -0.010000}, {0.010000, -0.240000, 0.230000}, {-0.160000, -0.190000, 0.350000}, {-0.450000, 0.000000, 0.450000}, {-0.590000, 0.200000, 0.390000}, {-0.600000, 0.380000, 0.220000}, {-0.600000, 0.600000, 0.000000}, {-0.480000, 0.690000, -0.210000}, {-0.320000, 0.740000, -0.420000}, {-0.120000, 0.740000, -0.620000}, {0.140000, 0.670000, -0.810000}, {0.370000, 0.570000, -0.940000}, {0.630000, 0.420000, -1.050000}, {0.870000, 0.260000, -1.130000}, {1.140000, 0.000000, -1.140000}, {1.320000, -0.200000, -1.120000}, {1.480000, -0.430000, -1.050000}, {1.660000, -0.670000, -0.990000}, {1.710000, -0.910000, -0.800000}, {1.760000, -1.130000, -0.630000}, {1.800000, -1.350000, -0.450000}, {1.830000, -1.560000, -0.270000}, {1.760000, -1.750000, -0.010000}, {1.720000, -1.850000, 0.130000}, {1.670000, -1.990000, 0.320000}, {1.550000, -2.130000, 0.580000}, {1.460000, -2.260000, 0.800000}, {1.270000, -2.290000, 1.020000}, {1.110000, -2.330000, 1.220000}, {0.970000, -2.420000, 1.450000}, {0.830000, -2.420000, 1.590000}, {0.610000, -2.400000, 1.790000}, {0.350000, -2.420000, 2.070000}, {0.160000, -2.370000, 2.210000}, {-0.100000, -2.300000, 2.400000}, {-0.340000, -2.250000, 2.590000}, {-0.530000, -2.180000, 2.710000}, {-0.770000, -2.060000, 2.830000}, {-0.980000, -1.970000, 2.950000}, {-1.160000, -1.880000, 3.040000}, {-1.340000, -1.780000, 3.120000}, {-1.540000, -1.600000, 3.140000}, {-1.760000, -1.470000, 3.230000}, {-1.980000, -1.270000, 3.250000}, {-2.200000, -1.040000, 3.240000}, {-2.440000, -0.870000, 3.310000}, {-2.670000, -0.620000, 3.290000}, {-2.850000, -0.390000, 3.240000}, {-3.020000, -0.160000, 3.180000}, {-3.220000, 0.070000, 3.150000}, {-3.350000, 0.280000, 3.070000}, {-3.510000, 0.530000, 2.980000}, {-3.660000, 0.750000, 2.910000}, {-3.800000, 0.980000, 2.820000}, {-3.890000, 1.190000, 2.700000}, {-3.980000, 1.350000, 2.630000}, {-4.100000, 1.570000, 2.530000}, {-4.230000, 1.800000, 2.430000}, {-4.370000, 2.040000, 2.330000}, {-4.450000, 2.320000, 2.130000}, {-4.470000, 2.520000, 1.950000}, {-4.520000, 2.730000, 1.790000}, {-4.530000, 2.940000, 1.590000}, {-4.530000, 3.140000, 1.390000}, {-4.530000, 3.360000, 1.170000}, {-4.520000, 3.570000, 0.950000}, {-4.500000, 3.780000, 0.720000}, {-4.470000, 4.000000, 0.470000}, {-4.400000, 4.140000, 0.260000}, {-4.360000, 4.250000, 0.110000}, {-4.310000, 4.370000, -0.060000}, {-4.290000, 4.540000, -0.250000}, {-4.220000, 4.690000, -0.470000}, {-4.180000, 4.920000, -0.740000}, {-4.090000, 5.020000, -0.930000}, {-3.990000, 5.140000, -1.150000}, {-3.940000, 5.280000, -1.340000}, {-3.810000, 5.350000, -1.540000}, {-3.660000, 5.440000, -1.780000}, {-3.540000, 5.490000, -1.950000}, {-3.420000, 5.590000, -2.170000}, {-3.280000, 5.670000, -2.390000}, {-3.090000, 5.730000, -2.640000}, {-2.860000, 5.760000, -2.900000}, {-2.660000, 5.770000, -3.110000}, {-2.410000, 5.790000, -3.380000}, {-2.230000, 5.820000, -3.590000}, {-2.090000, 5.880000, -3.790000}, {-1.910000, 5.900000, -3.990000}, {-1.650000, 5.920000, -4.270000}, {-1.410000, 5.910000, -4.500000}, {-1.190000, 5.900000, -4.710000}, {-0.950000, 5.870000, -4.920000}, {-0.740000, 5.890000, -5.150000}, {-0.500000, 5.840000, -5.340000}, {-0.240000, 5.820000, -5.580000}, {-0.080000, 5.860000, -5.780000}, {0.110000, 5.800000, -5.910000}, {0.360000, 5.720000, -6.080000}, {0.610000, 5.660000, -6.270000}, {0.860000, 5.540000, -6.400000}, {1.000000, 5.520000, -6.520000}, {1.260000, 5.390000, -6.650000}, {1.480000, 5.300000, -6.780000}, {1.700000, 5.270000, -6.970000}, {1.870000, 5.200000, -7.070000}, {2.080000, 5.150000, -7.230000}, {2.230000, 5.130000, -7.360000}, {2.450000, 5.010000, -7.460000}, {2.690000, 4.880000, -7.570000}, {2.970000, 4.720000, -7.690000}, {3.180000, 4.650000, -7.830000}, {3.410000, 4.510000, -7.920000}, {3.690000, 4.370000, -8.060000}, {3.890000, 4.250000, -8.140000}, {4.150000, 4.070000, -8.220000}, {4.400000, 3.930000, -8.330000}, {4.620000, 3.760000, -8.380000}, {4.820000, 3.570000, -8.390000}, {5.090000, 3.410000, -8.500000}, {5.300000, 3.250000, -8.550000}, {5.540000, 3.060000, -8.600000}, {5.710000, 2.930000, -8.640000}, {5.910000, 2.780000, -8.690000}, {6.120000, 2.590000, -8.710000}, {6.350000, 2.390000, -8.740000}, {6.560000, 2.210000, -8.770000}, {6.780000, 1.970000, -8.750000}, {7.030000, 1.730000, -8.760000}, {7.260000, 1.470000, -8.730000}, {7.490000, 1.210000, -8.700000}, {7.680000, 0.990000, -8.670000}, {7.910000, 0.740000, -8.650000}, {8.090000, 0.510000, -8.600000}, {8.250000, 0.320000, -8.570000}, {8.410000, 0.090000, -8.500000}, {8.620000, -0.170000, -8.450000}, {8.810000, -0.440000, -8.370000}, {8.970000, -0.670000, -8.300000}, {9.180000, -0.910000, -8.270000}, {9.400000, -1.140000, -8.260000}, {9.610000, -1.340000, -8.270000}, {9.690000, -1.520000, -8.170000}, {9.820000, -1.700000, -8.120000}, {9.960000, -1.890000, -8.070000}, {10.180000, -2.120000, -8.060000}, {10.310000, -2.340000, -7.970000}, {10.430000, -2.490000, -7.940000}, {10.550000, -2.690000, -7.860000}, {10.770000, -2.890000, -7.880000}, {10.920000, -3.150000, -7.770000}, {10.990000, -3.320000, -7.670000}, {11.130000, -3.540000, -7.590000}, {11.230000, -3.740000, -7.490000}, {11.320000, -4.000000, -7.320000}, {11.450000, -4.190000, -7.260000}, {11.550000, -4.400000, -7.150000}, {11.690000, -4.650000, -7.040000}, {11.780000, -4.880000, -6.900000}, {11.850000, -5.050000, -6.800000}, {11.950000, -5.260000, -6.690000}, {12.030000, -5.520000, -6.510000}, {12.190000, -5.760000, -6.430000}, {12.280000, -5.990000, -6.290000}, {12.360000, -6.180000, -6.180000}, {12.450000, -6.400000, -6.050000}, {12.500000, -6.560000, -5.940000}, {12.560000, -6.780000, -5.780000}, {12.610000, -7.010000, -5.600000}, {12.640000, -7.180000, -5.460000}, {12.660000, -7.370000, -5.290000}, {12.710000, -7.570000, -5.140000}, {12.750000, -7.800000, -4.950000}, {12.750000, -8.010000, -4.740000}, {12.750000, -8.220000, -4.530000}, {12.730000, -8.410000, -4.320000}, {12.770000, -8.600000, -4.170000}, {12.800000, -8.790000, -4.010000}, {12.780000, -8.970000, -3.810000}, {12.770000, -9.080000, -3.690000}, {12.760000, -9.340000, -3.420000}, {12.670000, -9.310000, -3.360000}, {12.700000, -9.480000, -3.220000}, {12.910000, -9.620000, -3.290000}, {13.100000, -9.650000, -3.450000}, {13.170000, -9.520000, -3.650000}, {13.140000, -9.270000, -3.870000}, {13.050000, -9.070000, -3.980000}, {12.840000, -8.850000, -3.990000}, {12.560000, -8.650000, -3.910000}, {12.370000, -8.560000, -3.810000}, {12.180000, -8.560000, -3.620000}, {11.990000, -8.550000, -3.440000}, {11.880000, -8.650000, -3.230000}, {11.760000, -8.760000, -3.000000}, {11.690000, -8.900000, -2.790000}, {11.690000, -9.140000, -2.550000}, {11.690000, -9.330000, -2.360000}, {11.760000, -9.570000, -2.190000}, {11.850000, -9.790000, -2.060000}, {11.980000, -9.990000, -1.990000}, {12.110000, -10.180000, -1.930000}, {12.300000, -10.400000, -1.900000}, {12.570000, -10.690000, -1.880000}, {12.760000, -10.850000, -1.910000}, {12.950000, -11.020000, -1.930000}, {13.140000, -11.160000, -1.980000}, {13.380000, -11.320000, -2.060000}, {13.600000, -11.440000, -2.160000}, {13.790000, -11.510000, -2.280000}, {13.940000, -11.560000, -2.380000}, {14.150000, -11.570000, -2.580000}, {14.370000, -11.620000, -2.750000}, {14.600000, -11.600000, -3.000000}, {14.810000, -11.590000, -3.220000}, {15.010000, -11.590000, -3.420000}, {15.150000, -11.530000, -3.620000}, {15.330000, -11.460000, -3.870000}, {15.470000, -11.400000, -4.070000}, {15.580000, -11.360000, -4.220000}, {15.590000, -11.210000, -4.380000}, {15.690000, -11.070000, -4.620000}, {15.790000, -10.920000, -4.870000}, {15.800000, -10.690000, -5.110000}, {15.880000, -10.530000, -5.350000}, {15.960000, -10.390000, -5.570000}, {15.940000, -10.170000, -5.770000}, {15.940000, -9.970000, -5.970000}, {15.910000, -9.770000, -6.140000}, {15.890000, -9.540000, -6.350000}, {15.900000, -9.330000, -6.570000}, {15.800000, -9.060000, -6.740000}, {15.690000, -8.850000, -6.840000}, {15.630000, -8.680000, -6.950000}, {15.580000, -8.480000, -7.100000}, {15.470000, -8.270000, -7.200000}, {15.360000, -8.080000, -7.280000}, {15.220000, -7.900000, -7.320000}, {15.120000, -7.670000, -7.450000}, {14.960000, -7.430000, -7.530000}, {14.770000, -7.180000, -7.590000}, {14.650000, -7.030000, -7.620000}, {14.450000, -6.790000, -7.660000}, {14.280000, -6.550000, -7.730000}, {14.130000, -6.410000, -7.720000}, {13.930000, -6.210000, -7.720000}, {13.650000, -5.950000, -7.700000}, {13.390000, -5.700000, -7.690000}, {13.200000, -5.530000, -7.670000}, {13.010000, -5.330000, -7.680000}, {12.870000, -5.220000, -7.650000}, {12.630000, -5.040000, -7.590000}, {12.450000, -4.910000, -7.540000}, {12.230000, -4.740000, -7.490000}, {12.010000, -4.540000, -7.470000}, {11.770000, -4.310000, -7.460000}, {11.590000, -4.140000, -7.450000}, {11.380000, -4.070000, -7.310000}, {11.260000, -4.000000, -7.260000}, {11.060000, -3.840000, -7.220000}, {10.850000, -3.760000, -7.090000}, {10.620000, -3.660000, -6.960000}, {10.360000, -3.580000, -6.780000}, {10.110000, -3.460000, -6.650000}, {9.860000, -3.420000, -6.440000}, {9.670000, -3.360000, -6.310000}, {9.460000, -3.340000, -6.120000}, {9.270000, -3.280000, -5.990000}, {9.100000, -3.300000, -5.800000}, {8.840000, -3.290000, -5.550000}, {8.620000, -3.280000, -5.340000}, {8.390000, -3.260000, -5.130000}, {8.200000, -3.280000, -4.920000},
	}
	edges := [][2]int{
		{0, 1}, {30, 31}, {60, 61}, {90, 91}, {120, 121}, {150, 151}, {180, 181}, {210, 211}, {240, 241}, {270, 271}, {300, 301}, {330, 331}, {360, 361}, {390, 391}, {420, 421}, {450, 451}, {480, 481}, {510, 511}, {540, 541}, {570, 571}, {600, 601}, {630, 631}, {660, 661}, {690, 691}, {720, 721}, {750, 751}, {780, 781}, {810, 811}, {840, 841}, {870, 871}, {900, 901}, {930, 931}, {960, 961}, {990, 991}, {1020, 1021}, {1050, 1051}, {1080, 1081}, {1110, 1111}, {1140, 1141}, {1170, 1171}, {1200, 1201}, {1230, 1231}, {1260, 1261}, {1290, 1291}, {1320, 1321}, {1350, 1351}, {1380, 1381}, {1410, 1411}, {1440, 1441}, {1470, 1471}, {1500, 1501}, {1530, 1531}, {1560, 1561}, {1590, 1591}, {1620, 1621}, {1650, 1651}, {1680, 1681}, {1710, 1711}, {1740, 1741}, {1770, 1771}, {1800, 1801}, {1830, 1831}, {1860, 1861}, {1890, 1891}, {1920, 1921}, {1950, 1951}, {1980, 1981}, {2010, 2011}, {2040, 2041}, {2070, 2071}, {2100, 2101}, {2130, 2131}, {2160, 2161}, {2190, 2191}, {2220, 2221}, {2250, 2251}, {2280, 2281}, {2310, 2311}, {2340, 2341}, {2370, 2371}, {2400, 2401}, {2430, 2431}, {2460, 2461}, {2490, 2491}, {2520, 2521}, {2550, 2551}, {2580, 2581}, {2610, 2611}, {2640, 2641}, {2670, 2671}, {2700, 2701}, {2730, 2731}, {2760, 2761}, {2790, 2791}, {2820, 2821}, {2850, 2851}, {2880, 2881}, {2910, 2911}, {2940, 2941}, {2970, 2971}, {3000, 3001}, {3030, 3031}, {3060, 3061}, {3090, 3091}, {3120, 3121}, {3150, 3151}, {3180, 3181}, {3210, 3211}, {3240, 3241}, {3270, 3271}, {3300, 3301}, {3330, 3331}, {3360, 3361}, {3390, 3391}, {3420, 3421}, {3450, 3451}, {3480, 3481}, {3510, 3511}, {3540, 3541}, {3570, 3571}, {3600, 3601}, {3630, 3631}, {3660, 3661}, {3690, 3691}, {3720, 3721}, {3750, 3751}, {3780, 3781}, {3810, 3811}, {3840, 3841}, {3870, 3871}, {3900, 3901}, {3930, 3931}, {3960, 3961}, {3990, 3991}, {4020, 4021}, {4050, 4051}, {4080, 4081}, {4110, 4111}, {4140, 4141}, {4170, 4171}, {4200, 4201}, {4230, 4231}, {4260, 4261}, {4290, 4291}, {4320, 4321}, {4350, 4351}, {4380, 4381}, {4410, 4411}, {4440, 4441}, {4470, 4471}, {4500, 4501}, {4530, 4531}, {4560, 4561}, {4590, 4591}, {4620, 4621}, {4650, 4651}, {4680, 4681}, {4710, 4711}, {4740, 4741}, {4770, 4771}, {4800, 4801}, {4830, 4831}, {4860, 4861}, {4890, 4891}, {4920, 4921}, {4950, 4951}, {4980, 4981}, {5010, 5011}, {5040, 5041}, {5070, 5071}, {5100, 5101}, {5130, 5131}, {5160, 5161}, {5190, 5191}, {5220, 5221}, {5250, 5251}, {5280, 5281}, {5310, 5311}, {5340, 5341}, {5370, 5371}, {5400, 5401}, {5430, 5431}, {5460, 5461}, {5490, 5491}, {5520, 5521}, {5550, 5551}, {5580, 5581}, {5610, 5611}, {5640, 5641}, {5670, 5671}, {5700, 5701}, {5730, 5731}, {5760, 5761}, {5790, 5791}, {5820, 5821}, {5850, 5851}, {5880, 5881}, {5910, 5911}, {5940, 5941}, {5970, 5971}, {6000, 6001}, {6030, 6031}, {6060, 6061}, {6090, 6091}, {6120, 6121}, {6150, 6151}, {6180, 6181}, {6210, 6211}, {6240, 6241}, {6270, 6271}, {6300, 6301}, {6330, 6331}, {6360, 6361}, {6390, 6391}, {6420, 6421}, {6450, 6451}, {6480, 6481}, {6510, 6511}, {6540, 6541}, {6570, 6571}, {6600, 6601}, {6630, 6631}, {6660, 6661}, {6690, 6691}, {6720, 6721}, {6750, 6751}, {6780, 6781}, {6810, 6811}, {6840, 6841}, {6870, 6871}, {6900, 6901}, {6930, 6931}, {6960, 6961}, {6990, 6991}, {7020, 7021}, {7050, 7051}, {7080, 7081}, {7110, 7111}, {7140, 7141}, {7170, 7171}, {7200, 7201}, {7230, 7231}, {7260, 7261}, {7290, 7291}, {7320, 7321}, {7350, 7351}, {7380, 7381}, {7410, 7411}, {7440, 7441}, {7470, 7471}, {7500, 7501}, {7530, 7531}, {7560, 7561}, {7590, 7591}, {7620, 7621}, {7650, 7651}, {7680, 7681}, {7710, 7711}, {7740, 7741}, {7770, 7771}, {7800, 7801}, {7830, 7831}, {7860, 7861}, {7890, 7891}, {7920, 7921}, {7950, 7951}, {7980, 7981}, {8010, 8011}, {8040, 8041}, {8070, 8071}, {8100, 8101}, {8130, 8131}, {8160, 8161}, {8190, 8191},
	}
	fmt.Println(len(edges), len(nodes))
	for _, v := range nodes {
		scene.Add(ln.NewOutlineSphere(eye, up, v, 0.333))
	}

	// for _, v0 := range nodes {
	// 	for _, v1 := range nodes {
	// 		if v0 == v1 {
	// 			continue
	// 		}
	for _, edge := range edges {
		v0 := nodes[edge[0]]
		v1 := nodes[edge[1]]
		d := v1.Sub(v0)
		z := d.Length()
		u := d.Cross(up).Normalize()
		a := math.Acos(d.Normalize().Dot(up))
		m := ln.Translate(v0)
		if a != 0 {
			m = ln.Rotate(u, a).Translate(v0)
		}
		c := ln.NewOutlineCylinder(m.Inverse().MulPosition(eye), up, 0.1, 0, z)
		scene.Add(ln.NewTransformedShape(c, m))
	}
	// }

	width := 100.0
	height := 100.0
	paths := scene.Render(eye, center, up, width, height, 60, 0.1, 100, 0.1)
	paths.WriteToPNG(fmt.Sprintf("out%03d.png", frame), width, height)
}

func main() {
	for i := 0; i < 2; i += 2 {
		render(i)
	}
}
